#define PTPGP_SIGNATURE_SUBPACKET_PARSER_BUFFER_SIZE 1024

typedef struct ptpgp_signature_subpacket_parser_t_ ptpgp_signature_subpacket_parser_t;

typedef enum {
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_SIGNATURE_CREATION_TIME,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_ISSUER,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_KEY_EXPIRATION_TIME,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_PREFERRED_SYMMETRIC_ALGORITHM,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_PREFERRED_HASH_ALGORITHM,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_PREFERRED_COMPRESSION_ALGORITHM,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_SIGNATURE_EXPIRATION_TIME,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_EXPORTABLE_CERTIFICATION,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_REVOCABLE,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_TRUST_LEVEL,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_TRUST_AMOUNT,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_REGULAR_EXPRESSION_FRAGMENT,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_REVOCATION_KEY_CLASS,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_REVOCATION_PUBLIC_KEY_ALGORITHM,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_REVOCATION_FINGERPRINT,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_NOTATION_DATA_FLAGS,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_KEY_SERVER_PREFERENCE,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_PREFERRED_KEY_SERVER,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_PRIMARY_USER_ID,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_POLICY_URI,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_KEY_FLAG,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_SIGNERS_USER_ID,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_REVOCATION_CODE,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_FEATURE,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_SIGNATURE_TARGET_PUBLIC_KEY_ALGORITHM,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_SIGNATURE_TARGET_HASH_ALGORITHM,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_EMBEDDED_SIGNATURE,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_NOTATION_DATA_NAME,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_NOTATION_DATA_VALUE,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_REVOCATION_REASON,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_SIGNATURE_TARGET_HASH_DATA,

  /* sentinel */
  PTPGP_SIGNATURE_SUBPACKET_PARSER_TOKEN_LAST
} ptpgp_signature_subpacket_parser_token_t;

typedef ptpgp_err_t (*ptpgp_signature_subpacket_parser_cb_t)(
  ptpgp_signature_subpacket_parser_t *,
  ptpgp_signature_subpacket_parser_token_t,
  u8*, size_t
);

typedef enum {
  PTPGP_SIGNATURE_SUBPACKET_PARSER_STATE_INIT,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_STATE_DONE,

  PTPGP_SIGNATURE_SUBPACKET_PARSER_STATE_NOTATION_DATA_NAME,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_STATE_NOTATION_DATA_VALUE,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_STATE_REVOCATION_REASON,
  PTPGP_SIGNATURE_SUBPACKET_PARSER_STATE_SIGNATURE_TARGET_HASH,

  /* sentinel */
  PTPGP_SIGNATURE_SUBPACKET_PARSER_STATE_LAST
} ptpgp_signature_subpacket_parser_state_t;

struct ptpgp_signature_subpacket_parser_t_ {
  ptpgp_signature_subpacket_type_t type;

  ptpgp_err_t last_err;

  ptpgp_signature_subpacket_parser_state_t state;

  ptpgp_signature_subpacket_parser_cb_t cb;
  void *user_data;

  u8 buf[PTPGP_SIGNATURE_SUBPACKET_PARSER_BUFFER_SIZE];
  size_t buf_len;

  size_t remaining_name_bytes,
         remaining_value_bytes;
};

ptpgp_err_t
ptpgp_signature_subpacket_parser_init(ptpgp_signature_subpacket_parser_t *,
                                      ptpgp_signature_subpacket_type_t,
                                      ptpgp_signature_subpacket_parser_cb_t,
                                      void *);
ptpgp_err_t
ptpgp_signature_subpacket_parser_push(ptpgp_signature_subpacket_parser_t *,
                                      u8 *, size_t);
ptpgp_err_t
ptpgp_signature_subpacket_parser_done(ptpgp_signature_subpacket_parser_t *);
